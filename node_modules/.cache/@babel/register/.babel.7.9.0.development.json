{
  "{\"sourceRoot\":\"/mnt/c/laragon/www/codersinhoods-projects/ecommerce-website/e-commerce-project/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/mnt/c/laragon/www/codersinhoods-projects/ecommerce-website/e-commerce-project\",\"filename\":\"/mnt/c/laragon/www/codersinhoods-projects/ecommerce-website/e-commerce-project/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/mnt/c/laragon/www/codersinhoods-projects/ecommerce-website/e-commerce-project\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/mnt/c/laragon/www/codersinhoods-projects/ecommerce-website/e-commerce-project/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/mnt/c/laragon/www/codersinhoods-projects/ecommerce-website/e-commerce-project",
      "filename": "/mnt/c/laragon/www/codersinhoods-projects/ecommerce-website/e-commerce-project/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/mnt/c/laragon/www/codersinhoods-projects/ecommerce-website/e-commerce-project",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/mnt/c/laragon/www/codersinhoods-projects/ecommerce-website/e-commerce-project/gulpfile.babel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/mnt/c/laragon/www/codersinhoods-projects/ecommerce-website/e-commerce-project/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/mnt/c/laragon/www/codersinhoods-projects/ecommerce-website/e-commerce-project/",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _gulpBabel = _interopRequireDefault(require(\"gulp-babel\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _gulpConcat = _interopRequireDefault(require(\"gulp-concat\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpUglify = _interopRequireDefault(require(\"gulp-uglify\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// create browserSync server, so I don't have to reload the page all the time\nvar server = _browserSync[\"default\"].create();\n\nfunction reload(done) {\n  server.reload();\n  done();\n}\n\nfunction serve(done) {\n  server.init({\n    server: {\n      baseDir: \"./\"\n    }\n  });\n  done();\n} // create paths for scripts\n\n\nvar paths = {\n  scripts: {\n    src: \"src/scripts/**/*.js\",\n    dest: \"dist/scripts/\"\n  },\n  styles: {\n    src: \"src/scss/**/*.scss\",\n    dest: \"dist/css/\"\n  },\n  html: {\n    src: \"/*.html\",\n    dest: \"/\"\n  }\n}; // clean dist function\n\nvar clean = function clean() {\n  return (0, _del[\"default\"])([\"dist\"]);\n};\n\nfunction scripts() {\n  return _gulp[\"default\"].src(paths.scripts.src, {\n    sourcemaps: true\n  }).pipe((0, _gulpBabel[\"default\"])({\n    presets: [[\"@babel/env\", {\n      modules: false\n    }]]\n  })).pipe((0, _gulpUglify[\"default\"])()).pipe((0, _gulpConcat[\"default\"])(\"index.min.js\")).pipe(_gulp[\"default\"].dest(paths.scripts.dest));\n}\n\nfunction styles() {\n  return _gulp[\"default\"].src(paths.styles.src).pipe((0, _gulpSass[\"default\"])().on(\"error\", _gulpSass[\"default\"].logError)).pipe(_gulp[\"default\"].dest(paths.styles.dest)).pipe(server.stream());\n} // watch the server and reload scripts on change\n\n\nvar watch = function watch() {\n  _gulp[\"default\"].watch(\"*.html\", _gulp[\"default\"].series(reload));\n\n  _gulp[\"default\"].watch(paths.styles.src, _gulp[\"default\"].series(styles));\n\n  _gulp[\"default\"].watch(paths.scripts.src, _gulp[\"default\"].series(scripts, reload));\n};\n\nvar dev = _gulp[\"default\"].series(clean, scripts, styles, serve, watch);\n\nvar _default = dev;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInNlcnZlciIsImJyb3dzZXJTeW5jIiwiY3JlYXRlIiwicmVsb2FkIiwiZG9uZSIsInNlcnZlIiwiaW5pdCIsImJhc2VEaXIiLCJwYXRocyIsInNjcmlwdHMiLCJzcmMiLCJkZXN0Iiwic3R5bGVzIiwiaHRtbCIsImNsZWFuIiwiZ3VscCIsInNvdXJjZW1hcHMiLCJwaXBlIiwicHJlc2V0cyIsIm1vZHVsZXMiLCJvbiIsInNhc3MiLCJsb2dFcnJvciIsInN0cmVhbSIsIndhdGNoIiwic2VyaWVzIiwiZGV2Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQTtBQUNBLElBQU1BLE1BQU0sR0FBR0Msd0JBQVlDLE1BQVosRUFBZjs7QUFFQSxTQUFTQyxNQUFULENBQWdCQyxJQUFoQixFQUFzQjtBQUNwQkosRUFBQUEsTUFBTSxDQUFDRyxNQUFQO0FBQ0FDLEVBQUFBLElBQUk7QUFDTDs7QUFFRCxTQUFTQyxLQUFULENBQWVELElBQWYsRUFBcUI7QUFDbkJKLEVBQUFBLE1BQU0sQ0FBQ00sSUFBUCxDQUFZO0FBQ1ZOLElBQUFBLE1BQU0sRUFBRTtBQUNOTyxNQUFBQSxPQUFPLEVBQUU7QUFESDtBQURFLEdBQVo7QUFLQUgsRUFBQUEsSUFBSTtBQUNMLEMsQ0FFRDs7O0FBQ0EsSUFBTUksS0FBSyxHQUFHO0FBQ1pDLEVBQUFBLE9BQU8sRUFBRTtBQUNQQyxJQUFBQSxHQUFHLEVBQUUscUJBREU7QUFFUEMsSUFBQUEsSUFBSSxFQUFFO0FBRkMsR0FERztBQUtaQyxFQUFBQSxNQUFNLEVBQUU7QUFDTkYsSUFBQUEsR0FBRyxFQUFFLG9CQURDO0FBRU5DLElBQUFBLElBQUksRUFBRTtBQUZBLEdBTEk7QUFTWkUsRUFBQUEsSUFBSSxFQUFFO0FBQ0pILElBQUFBLEdBQUcsRUFBRSxTQUREO0FBRUpDLElBQUFBLElBQUksRUFBRTtBQUZGO0FBVE0sQ0FBZCxDLENBZUE7O0FBQ0EsSUFBTUcsS0FBSyxHQUFHLFNBQVJBLEtBQVE7QUFBQSxTQUFNLHFCQUFJLENBQUMsTUFBRCxDQUFKLENBQU47QUFBQSxDQUFkOztBQUVBLFNBQVNMLE9BQVQsR0FBbUI7QUFDakIsU0FBT00saUJBQ0pMLEdBREksQ0FDQUYsS0FBSyxDQUFDQyxPQUFOLENBQWNDLEdBRGQsRUFDbUI7QUFBRU0sSUFBQUEsVUFBVSxFQUFFO0FBQWQsR0FEbkIsRUFFSkMsSUFGSSxDQUdILDJCQUFNO0FBQ0pDLElBQUFBLE9BQU8sRUFBRSxDQUNQLENBQ0UsWUFERixFQUVFO0FBQ0VDLE1BQUFBLE9BQU8sRUFBRTtBQURYLEtBRkYsQ0FETztBQURMLEdBQU4sQ0FIRyxFQWNKRixJQWRJLENBY0MsNkJBZEQsRUFlSkEsSUFmSSxDQWVDLDRCQUFPLGNBQVAsQ0FmRCxFQWdCSkEsSUFoQkksQ0FnQkNGLGlCQUFLSixJQUFMLENBQVVILEtBQUssQ0FBQ0MsT0FBTixDQUFjRSxJQUF4QixDQWhCRCxDQUFQO0FBaUJEOztBQUVELFNBQVNDLE1BQVQsR0FBa0I7QUFDaEIsU0FBT0csaUJBQ0pMLEdBREksQ0FDQUYsS0FBSyxDQUFDSSxNQUFOLENBQWFGLEdBRGIsRUFFSk8sSUFGSSxDQUVDLDRCQUFPRyxFQUFQLENBQVUsT0FBVixFQUFtQkMscUJBQUtDLFFBQXhCLENBRkQsRUFHSkwsSUFISSxDQUdDRixpQkFBS0osSUFBTCxDQUFVSCxLQUFLLENBQUNJLE1BQU4sQ0FBYUQsSUFBdkIsQ0FIRCxFQUlKTSxJQUpJLENBSUNqQixNQUFNLENBQUN1QixNQUFQLEVBSkQsQ0FBUDtBQUtELEMsQ0FFRDs7O0FBQ0EsSUFBTUMsS0FBSyxHQUFHLFNBQVJBLEtBQVEsR0FBTTtBQUNsQlQsbUJBQUtTLEtBQUwsQ0FBVyxRQUFYLEVBQXFCVCxpQkFBS1UsTUFBTCxDQUFZdEIsTUFBWixDQUFyQjs7QUFDQVksbUJBQUtTLEtBQUwsQ0FBV2hCLEtBQUssQ0FBQ0ksTUFBTixDQUFhRixHQUF4QixFQUE2QkssaUJBQUtVLE1BQUwsQ0FBWWIsTUFBWixDQUE3Qjs7QUFDQUcsbUJBQUtTLEtBQUwsQ0FBV2hCLEtBQUssQ0FBQ0MsT0FBTixDQUFjQyxHQUF6QixFQUE4QkssaUJBQUtVLE1BQUwsQ0FBWWhCLE9BQVosRUFBcUJOLE1BQXJCLENBQTlCO0FBQ0QsQ0FKRDs7QUFNQSxJQUFNdUIsR0FBRyxHQUFHWCxpQkFBS1UsTUFBTCxDQUFZWCxLQUFaLEVBQW1CTCxPQUFuQixFQUE0QkcsTUFBNUIsRUFBb0NQLEtBQXBDLEVBQTJDbUIsS0FBM0MsQ0FBWjs7ZUFDZUUsRyIsInNvdXJjZVJvb3QiOiIvbW50L2MvbGFyYWdvbi93d3cvY29kZXJzaW5ob29kcy1wcm9qZWN0cy9lY29tbWVyY2Utd2Vic2l0ZS9lLWNvbW1lcmNlLXByb2plY3QvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJhYmVsIGZyb20gXCJndWxwLWJhYmVsXCI7XHJcbmltcG9ydCBicm93c2VyU3luYyBmcm9tIFwiYnJvd3Nlci1zeW5jXCI7XHJcbmltcG9ydCBjb25jYXQgZnJvbSBcImd1bHAtY29uY2F0XCI7XHJcbmltcG9ydCBkZWwgZnJvbSBcImRlbFwiO1xyXG5pbXBvcnQgZ3VscCBmcm9tIFwiZ3VscFwiO1xyXG5pbXBvcnQgdWdsaWZ5IGZyb20gXCJndWxwLXVnbGlmeVwiO1xyXG5pbXBvcnQgc2FzcyBmcm9tIFwiZ3VscC1zYXNzXCI7XHJcblxyXG4vLyBjcmVhdGUgYnJvd3NlclN5bmMgc2VydmVyLCBzbyBJIGRvbid0IGhhdmUgdG8gcmVsb2FkIHRoZSBwYWdlIGFsbCB0aGUgdGltZVxyXG5jb25zdCBzZXJ2ZXIgPSBicm93c2VyU3luYy5jcmVhdGUoKTtcclxuXHJcbmZ1bmN0aW9uIHJlbG9hZChkb25lKSB7XHJcbiAgc2VydmVyLnJlbG9hZCgpO1xyXG4gIGRvbmUoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gc2VydmUoZG9uZSkge1xyXG4gIHNlcnZlci5pbml0KHtcclxuICAgIHNlcnZlcjoge1xyXG4gICAgICBiYXNlRGlyOiBcIi4vXCIsXHJcbiAgICB9LFxyXG4gIH0pO1xyXG4gIGRvbmUoKTtcclxufVxyXG5cclxuLy8gY3JlYXRlIHBhdGhzIGZvciBzY3JpcHRzXHJcbmNvbnN0IHBhdGhzID0ge1xyXG4gIHNjcmlwdHM6IHtcclxuICAgIHNyYzogXCJzcmMvc2NyaXB0cy8qKi8qLmpzXCIsXHJcbiAgICBkZXN0OiBcImRpc3Qvc2NyaXB0cy9cIixcclxuICB9LFxyXG4gIHN0eWxlczoge1xyXG4gICAgc3JjOiBcInNyYy9zY3NzLyoqLyouc2Nzc1wiLFxyXG4gICAgZGVzdDogXCJkaXN0L2Nzcy9cIixcclxuICB9LFxyXG4gIGh0bWw6IHtcclxuICAgIHNyYzogXCIvKi5odG1sXCIsXHJcbiAgICBkZXN0OiBcIi9cIixcclxuICB9LFxyXG59O1xyXG5cclxuLy8gY2xlYW4gZGlzdCBmdW5jdGlvblxyXG5jb25zdCBjbGVhbiA9ICgpID0+IGRlbChbXCJkaXN0XCJdKTtcclxuXHJcbmZ1bmN0aW9uIHNjcmlwdHMoKSB7XHJcbiAgcmV0dXJuIGd1bHBcclxuICAgIC5zcmMocGF0aHMuc2NyaXB0cy5zcmMsIHsgc291cmNlbWFwczogdHJ1ZSB9KVxyXG4gICAgLnBpcGUoXHJcbiAgICAgIGJhYmVsKHtcclxuICAgICAgICBwcmVzZXRzOiBbXHJcbiAgICAgICAgICBbXHJcbiAgICAgICAgICAgIFwiQGJhYmVsL2VudlwiLFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgbW9kdWxlczogZmFsc2UsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICBdLFxyXG4gICAgICAgIF0sXHJcbiAgICAgIH0pXHJcbiAgICApXHJcbiAgICAucGlwZSh1Z2xpZnkoKSlcclxuICAgIC5waXBlKGNvbmNhdChcImluZGV4Lm1pbi5qc1wiKSlcclxuICAgIC5waXBlKGd1bHAuZGVzdChwYXRocy5zY3JpcHRzLmRlc3QpKTtcclxufVxyXG5cclxuZnVuY3Rpb24gc3R5bGVzKCkge1xyXG4gIHJldHVybiBndWxwXHJcbiAgICAuc3JjKHBhdGhzLnN0eWxlcy5zcmMpXHJcbiAgICAucGlwZShzYXNzKCkub24oXCJlcnJvclwiLCBzYXNzLmxvZ0Vycm9yKSlcclxuICAgIC5waXBlKGd1bHAuZGVzdChwYXRocy5zdHlsZXMuZGVzdCkpXHJcbiAgICAucGlwZShzZXJ2ZXIuc3RyZWFtKCkpO1xyXG59XHJcblxyXG4vLyB3YXRjaCB0aGUgc2VydmVyIGFuZCByZWxvYWQgc2NyaXB0cyBvbiBjaGFuZ2VcclxuY29uc3Qgd2F0Y2ggPSAoKSA9PiB7XHJcbiAgZ3VscC53YXRjaChcIiouaHRtbFwiLCBndWxwLnNlcmllcyhyZWxvYWQpKTtcclxuICBndWxwLndhdGNoKHBhdGhzLnN0eWxlcy5zcmMsIGd1bHAuc2VyaWVzKHN0eWxlcykpO1xyXG4gIGd1bHAud2F0Y2gocGF0aHMuc2NyaXB0cy5zcmMsIGd1bHAuc2VyaWVzKHNjcmlwdHMsIHJlbG9hZCkpO1xyXG59O1xyXG5cclxuY29uc3QgZGV2ID0gZ3VscC5zZXJpZXMoY2xlYW4sIHNjcmlwdHMsIHN0eWxlcywgc2VydmUsIHdhdGNoKTtcclxuZXhwb3J0IGRlZmF1bHQgZGV2O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "server",
        "browserSync",
        "create",
        "reload",
        "done",
        "serve",
        "init",
        "baseDir",
        "paths",
        "scripts",
        "src",
        "dest",
        "styles",
        "html",
        "clean",
        "gulp",
        "sourcemaps",
        "pipe",
        "presets",
        "modules",
        "on",
        "sass",
        "logError",
        "stream",
        "watch",
        "series",
        "dev"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;AACA,IAAMA,MAAM,GAAGC,wBAAYC,MAAZ,EAAf;;AAEA,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AACpBJ,EAAAA,MAAM,CAACG,MAAP;AACAC,EAAAA,IAAI;AACL;;AAED,SAASC,KAAT,CAAeD,IAAf,EAAqB;AACnBJ,EAAAA,MAAM,CAACM,IAAP,CAAY;AACVN,IAAAA,MAAM,EAAE;AACNO,MAAAA,OAAO,EAAE;AADH;AADE,GAAZ;AAKAH,EAAAA,IAAI;AACL,C,CAED;;;AACA,IAAMI,KAAK,GAAG;AACZC,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE,qBADE;AAEPC,IAAAA,IAAI,EAAE;AAFC,GADG;AAKZC,EAAAA,MAAM,EAAE;AACNF,IAAAA,GAAG,EAAE,oBADC;AAENC,IAAAA,IAAI,EAAE;AAFA,GALI;AASZE,EAAAA,IAAI,EAAE;AACJH,IAAAA,GAAG,EAAE,SADD;AAEJC,IAAAA,IAAI,EAAE;AAFF;AATM,CAAd,C,CAeA;;AACA,IAAMG,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAM,qBAAI,CAAC,MAAD,CAAJ,CAAN;AAAA,CAAd;;AAEA,SAASL,OAAT,GAAmB;AACjB,SAAOM,iBACJL,GADI,CACAF,KAAK,CAACC,OAAN,CAAcC,GADd,EACmB;AAAEM,IAAAA,UAAU,EAAE;AAAd,GADnB,EAEJC,IAFI,CAGH,2BAAM;AACJC,IAAAA,OAAO,EAAE,CACP,CACE,YADF,EAEE;AACEC,MAAAA,OAAO,EAAE;AADX,KAFF,CADO;AADL,GAAN,CAHG,EAcJF,IAdI,CAcC,6BAdD,EAeJA,IAfI,CAeC,4BAAO,cAAP,CAfD,EAgBJA,IAhBI,CAgBCF,iBAAKJ,IAAL,CAAUH,KAAK,CAACC,OAAN,CAAcE,IAAxB,CAhBD,CAAP;AAiBD;;AAED,SAASC,MAAT,GAAkB;AAChB,SAAOG,iBACJL,GADI,CACAF,KAAK,CAACI,MAAN,CAAaF,GADb,EAEJO,IAFI,CAEC,4BAAOG,EAAP,CAAU,OAAV,EAAmBC,qBAAKC,QAAxB,CAFD,EAGJL,IAHI,CAGCF,iBAAKJ,IAAL,CAAUH,KAAK,CAACI,MAAN,CAAaD,IAAvB,CAHD,EAIJM,IAJI,CAICjB,MAAM,CAACuB,MAAP,EAJD,CAAP;AAKD,C,CAED;;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClBT,mBAAKS,KAAL,CAAW,QAAX,EAAqBT,iBAAKU,MAAL,CAAYtB,MAAZ,CAArB;;AACAY,mBAAKS,KAAL,CAAWhB,KAAK,CAACI,MAAN,CAAaF,GAAxB,EAA6BK,iBAAKU,MAAL,CAAYb,MAAZ,CAA7B;;AACAG,mBAAKS,KAAL,CAAWhB,KAAK,CAACC,OAAN,CAAcC,GAAzB,EAA8BK,iBAAKU,MAAL,CAAYhB,OAAZ,EAAqBN,MAArB,CAA9B;AACD,CAJD;;AAMA,IAAMuB,GAAG,GAAGX,iBAAKU,MAAL,CAAYX,KAAZ,EAAmBL,OAAnB,EAA4BG,MAA5B,EAAoCP,KAApC,EAA2CmB,KAA3C,CAAZ;;eACeE,G",
      "sourceRoot": "/mnt/c/laragon/www/codersinhoods-projects/ecommerce-website/e-commerce-project/",
      "sourcesContent": [
        "import babel from \"gulp-babel\";\r\nimport browserSync from \"browser-sync\";\r\nimport concat from \"gulp-concat\";\r\nimport del from \"del\";\r\nimport gulp from \"gulp\";\r\nimport uglify from \"gulp-uglify\";\r\nimport sass from \"gulp-sass\";\r\n\r\n// create browserSync server, so I don't have to reload the page all the time\r\nconst server = browserSync.create();\r\n\r\nfunction reload(done) {\r\n  server.reload();\r\n  done();\r\n}\r\n\r\nfunction serve(done) {\r\n  server.init({\r\n    server: {\r\n      baseDir: \"./\",\r\n    },\r\n  });\r\n  done();\r\n}\r\n\r\n// create paths for scripts\r\nconst paths = {\r\n  scripts: {\r\n    src: \"src/scripts/**/*.js\",\r\n    dest: \"dist/scripts/\",\r\n  },\r\n  styles: {\r\n    src: \"src/scss/**/*.scss\",\r\n    dest: \"dist/css/\",\r\n  },\r\n  html: {\r\n    src: \"/*.html\",\r\n    dest: \"/\",\r\n  },\r\n};\r\n\r\n// clean dist function\r\nconst clean = () => del([\"dist\"]);\r\n\r\nfunction scripts() {\r\n  return gulp\r\n    .src(paths.scripts.src, { sourcemaps: true })\r\n    .pipe(\r\n      babel({\r\n        presets: [\r\n          [\r\n            \"@babel/env\",\r\n            {\r\n              modules: false,\r\n            },\r\n          ],\r\n        ],\r\n      })\r\n    )\r\n    .pipe(uglify())\r\n    .pipe(concat(\"index.min.js\"))\r\n    .pipe(gulp.dest(paths.scripts.dest));\r\n}\r\n\r\nfunction styles() {\r\n  return gulp\r\n    .src(paths.styles.src)\r\n    .pipe(sass().on(\"error\", sass.logError))\r\n    .pipe(gulp.dest(paths.styles.dest))\r\n    .pipe(server.stream());\r\n}\r\n\r\n// watch the server and reload scripts on change\r\nconst watch = () => {\r\n  gulp.watch(\"*.html\", gulp.series(reload));\r\n  gulp.watch(paths.styles.src, gulp.series(styles));\r\n  gulp.watch(paths.scripts.src, gulp.series(scripts, reload));\r\n};\r\n\r\nconst dev = gulp.series(clean, scripts, styles, serve, watch);\r\nexport default dev;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1587759199721
  }
}